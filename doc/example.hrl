%%%
%%% This file was generated (and not modified, besides the addition of this comment).
%%% The reason to include it in the repository is that `example_server.erl` and 
%%% `example_client.erl` depend on it.
%%%

%% generated by soap from: e:/e_soap/soap/doc/example.wsdl
%% for service "contacts_service" and port "contacts_port"
%% using options: [{service,"contacts_service"},{port,"contacts_port"},{generate,both},{namespaces,[{"http://example.com/contacts.xsd",undefined}]},{generate_tests,none},{http_server,soap_server_cowboy_1},{server_name,"example_server"},{http_client,soap_client_ibrowse},{client_name,"example_client"},{strict,true}]

%%% This file contains record and type decarations that are used by the WSDL.
%%%
%%% It also contains a macro 'INTERFACE' that is used to make information
%%% about the WSDL available to the SOAP implementation.
%%%
%%% It is possible (and in some cases necessary) to change the name of the
%%% record fields.
%%%
%%% It is possible to add default values, but be aware that these will only
%%% be used when *writing* an xml document.

%%% Records used to represent fault response messages:

-record(faultdetail, {uri :: string(),
                      tag :: string(),
                      text :: string()}).

-record(faultcode, {uri :: string(),
                    code :: string(),
                    subcode :: #faultcode{} % only v. 1.2
                   }).

-record(faultreason, {text :: string(),
                      language :: string()}).

-record(soap_fault_1_1, {faultcode :: #faultcode{},
                         faultstring :: string(),
                         faultactor :: string(),
                         detail :: [#faultdetail{}]}).

-record(soap_fault_1_2, {code :: #faultcode{},
                         reason :: [#faultreason{}],
                         role :: string(),
                         detail :: [#faultdetail{}]}).

-ifndef(ERLSOM_QNAME_TYPES).
-define(ERLSOM_QNAME_TYPES, true).
%% xsd:QName values are translated to #qname{} records.
-record(qname, {uri :: string(),
                localPart :: string(),
                prefix :: string(),
                mappedPrefix :: string()}).
-endif.



-record('DebuggingHeader', {
	debugLevel :: integer()}).

-type 'DebuggingHeader'() :: #'DebuggingHeader'{}.


-record('LocaleOptions', {
	language :: string() | undefined,
	localizeErrors :: boolean() | undefined}).

-type 'LocaleOptions'() :: #'LocaleOptions'{}.


-record(id, {
	id :: integer()}).

-type id() :: #id{}.


-record(contact, {
	id :: integer() | undefined,
	first_name :: string(),
	last_name :: string(),
	projects :: [string()] | undefined}).

-type contact() :: #contact{}.
-define(INTERFACE, {interface,"contacts_service",example,'1.1',
                    soap_client_ibrowse,soap_server_cowboy_1,example_server,
                    example_client,[],"http://example.com/contacts.wsdl",
                    "http://schemas.xmlsoap.org/soap/envelope/","document",
                    undefined,"http://localhost:8080","contacts_port",
                    "contacts_binding","contacts_port_type",
                    [{op,"store",store,"store",undefined,request_response,
                      contact,id,undefined},
                     {op,"retrieve",retrieve,"retrieve",undefined,
                      request_response,id,contact,undefined}],
                    {model,
                     [{type,'_document',sequence,
                       [{el,
                         [{alt,contact,contact,[],1,1,true,undefined},
                          {alt,id,id,[],1,1,true,undefined},
                          {alt,'LocaleOptions','LocaleOptions',[],1,1,true,
                           undefined},
                          {alt,'DebuggingHeader','DebuggingHeader',[],1,1,
                           true,undefined}],
                         1,1,undefined,2}],
                       [],undefined,undefined,1,1,1,false,undefined},
                      {type,'DebuggingHeader',sequence,
                       [{el,
                         [{alt,debugLevel,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         1,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'LocaleOptions',sequence,
                       [{el,
                         [{alt,language,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,localizeErrors,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,id,sequence,
                       [{el,
                         [{alt,id,{'#PCDATA',integer},[],1,1,true,undefined}],
                         1,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,contact,sequence,
                       [{el,
                         [{alt,id,{'#PCDATA',integer},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,first_name,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         1,1,undefined,3},
                        {el,
                         [{alt,last_name,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         1,1,undefined,4},
                        {el,
                         [{alt,projects,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,unbound,undefined,5}],
                       [],undefined,undefined,5,1,1,undefined,undefined}],
                     [{ns,"http://example.com/contacts.xsd",undefined,
                       unqualified},
                      {ns,"http://www.w3.org/2001/XMLSchema","xsd",qualified}],
                     "http://example.com/contacts.xsd",[],false,skip},
                    1,undefined,
                    [{"http://example.com/contacts.xsd",undefined}]}).
